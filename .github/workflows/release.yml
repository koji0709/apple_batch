name: Create Release and Upload Artifact

# 推送触发
on:
  push:
    # tags:
    #   - 'v*.*.*' # Trigger on tags like v1.0.0, v3.2.5 etc.

jobs:
  build-and-release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - OS: macos-13
          - OS: macos-latest

    runs-on: ${{ matrix.OS }}
    permissions:
      contents: write # Needed to create releases and upload assets

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu' # Popular OpenJDK distribution
        cache: 'maven'

    - name: Install local JAR dependency
      run: mvn install:install-file -Dfile=lib/ddddocr4j-1.0.jar -DgroupId=com.mmg -DartifactId=ddddocr4j -Dversion=1.0 -Dpackaging=jar -DgeneratePom=true

    - name: Install local JAR dependency
      run: mvn install:install-file -Dfile=lib/d4ocr-1.0.1.jar -DgroupId=top.gcszhn -DartifactId=d4ocr -Dversion=1.0 -Dpackaging=jar -DgeneratePom=true

    - name: Build with Maven and Package
      run: mvn -B package --file pom.xml # -B for non-interactive batch mode

    - name: Extract project version from pom.xml
      id: get_version
      run: echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

    # - name: Create Release and Upload DMG
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     # The release name will be the tag name
    #     # The body can be customized or left empty to use commit messages
    #     files: target/*.dmg # Upload the generated DMG file from the target directory
    #     tag_name: v${{ steps.get_version.outputs.PROJECT_VERSION }}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by GitHub Actions

    - name: Archive artifact
      uses: actions/upload-artifact@v4
      with:
        name: apple_batch-${{ matrix.os }}
        path: |
          target/*.dmg